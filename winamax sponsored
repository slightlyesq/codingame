import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {
//how can I make J Q K A always equal to 11 12 13 14 hrm?
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        HashMap<String,Integer> faceValues = new HashMap<String,Integer>();
        
        faceValues.put("2",2);faceValues.put("3",3);faceValues.put("4",4);faceValues.put("5",5);faceValues.put("6",6);faceValues.put("7",7);
        faceValues.put("8",8);faceValues.put("9",9);faceValues.put("10",10);faceValues.put("J",11);faceValues.put("Q",12);
        faceValues.put("K",13);faceValues.put("A",14);
        
        ArrayList<String> player1 = new ArrayList<String>();//could maybe run this faster by capping the array at size m + n
        ArrayList<String> player2 = new ArrayList<String>();
        ArrayList<String> war = new ArrayList<String>();
        
        int n = in.nextInt(); // the number of cards for player 1
        for (int i = 0; i < n; i++) {
            String cardp1 = in.next(); // the n cards of player 1
            player1.add(cardp1);
        }
        int m = in.nextInt(); // the number of cards for player 2
        for (int i = 0; i < m; i++) {
            String cardp2 = in.next(); // the m cards of player 2
            player2.add(cardp2);
        }
        
        int gameRounds = 0;
        //** so far I think everything is fine.
        while(true){
            if(player1.size() == 0){
                System.out.println("2 "+gameRounds);
                break;
            }
            if(player2.size() == 0){
                System.out.println("1 "+gameRounds);
                break;
            }
            //** so far so good i think
            String p1card = player1.get(0);String p2card = player2.get(0);
            //So we pull the top card from player1 and player2
            String p1key = p1card.substring(0,p1card.length()-1);
            String p2key = p2card.substring(0,p2card.length()-1);
            //^ this pulls the number but not the suit from the card
            int p1value = faceValues.get(p1key);player1.remove(0);
            int p2value = faceValues.get(p2key);player2.remove(0);
            //^^^^okay so I think its saying there's no card to remove here.
            String add1=p1key+p1value;String add2=p2key+p2value;
            
            if(p1value > p2value){
                //add to p1 deck, p1 then p2
                player1.add(add1);player1.add(add2);gameRounds++;continue;//should break out of this game round, rather than out all together, maybe i need continue
            }
            if(p1value < p2value){
                //p1value < p2value
                player2.add(add1);player2.add(add2);gameRounds++;continue;
            }
            
            while(true){
                //this is for WAR rounds
                System.err.println("do i get in here?");//oh wow i never get inside this loop.
                if(p1value != p2value){
                    break;//and then it'll go back to the top    
                }
                else{
                    //alright here the cards match, need to pull 3+1//resolve war!
                    //need to check to make sure each player has cards
                    
                    if(player1.size() == 0 || player2.size() == 0){
                        gameRounds++;System.out.println("PAT "+gameRounds);break;
                    }
                    
                    String p1war1 = player1.get(0);String p1keywar1 = p1war1.substring(0,p1war1.length()-1);int p1valuewar1 = faceValues.get(p1keywar1);player1.remove(0);
                    String p2war1 = player2.get(0);String p2keywar1 = p2war1.substring(0,p2war1.length()-1);int p2valuewar1 = faceValues.get(p2keywar1);player2.remove(0);
                    //just gonna make the below a method i guess
                    
                    if(player1.size() == 0 || player2.size() == 0){
                        gameRounds++;
                        System.out.println("PAT "+gameRounds);break;
                    }
                    
                    String p1war2 = player1.get(0);String p1keywar2 = p1war2.substring(0,p1war2.length()-1);int p1valuewar2 = faceValues.get(p1keywar2);player1.remove(0);
                    String p2war2 = player2.get(0);String p2keywar2 = p2war2.substring(0,p2war2.length()-1);int p2valuewar2 = faceValues.get(p2keywar2);player2.remove(0);
                    
                    if(player1.size() == 0 || player2.size() == 0){
                        gameRounds++;
                        System.out.println("PAT "+gameRounds);break;
                    }
                    
                    String p1war3 = player1.get(0);String p1keywar3 = p1war3.substring(0,p1war3.length()-1);int p1valuewar3 = faceValues.get(p1keywar3);player1.remove(0);
                    String p2war3 = player2.get(0);String p2keywar3 = p2war3.substring(0,p2war3.length()-1);int p2valuewar3 = faceValues.get(p2keywar3);player2.remove(0);
                    
                    if(player1.size() == 0 || player2.size() == 0){
                        gameRounds++;
                        System.out.println("PAT "+gameRounds);break;
                    }
                    
                    String p1war4 = player1.get(0);String p1keywar4 = p1war4.substring(0,p1war4.length()-1);int p1valuewar4 = faceValues.get(p1keywar4);player1.remove(0);
                    String p2war4 = player2.get(0);String p2keywar4 = p2war4.substring(0,p2war4.length()-1);int p2valuewar4 = faceValues.get(p2keywar4);player2.remove(0);
                    
                    String add1war1 = p1keywar1+p1valuewar1;String add1war2 = p1keywar2+p1valuewar2;String add1war3 = p1keywar3+p1valuewar3;String add1war4 = p1keywar4+p1valuewar4;
                    String add2war1 = p2keywar1+p2valuewar1;String add2war2 = p2keywar2+p2valuewar2;String add2war3 = p2keywar3+p2valuewar3;String add2war4 = p2keywar4+p2valuewar4;
                    
                    war.add(add1war1);war.add(add1war2);war.add(add1war3);war.add(add1war4);
                    war.add(add2war1);war.add(add2war2);war.add(add2war3);war.add(add2war4);
                    
                    if(p1valuewar4 == p2valuewar4){
                        continue;
                    }
                    else{
                        if(p1valuewar4 > p2valuewar4){
                            gameRounds++;player1.addAll(war);break;//i think this works
                        }
                        if(p1valuewar4 < p2valuewar4){
                            gameRounds++;player2.addAll(war);break;//i think this works
                        }
                        break;
                    }
                    //alright all 4 cards pulled, now check to see who wins
                }
                //this is the end of the WAR loop below
            }
            continue;//continues original while loop for main game
        }
        
        //System.out.println("PAT");//"if players are equally first, PAT, otherwise the player number followed by the number of rounds
        //separated by a space. (a war or succession of wards count as one game round)
    }
}
